plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java-library'
    id 'idea'
}

ext {
    springCloudVersion = "2020.0.3"
    powermockVersion = "2.0.9"
    commonsIoVersion = "2.4"
    javaMailVersion = "1.4.7"
    springFoxVersion = "2.7.0"
    fileuploadVersion = "1.3.2"
    guavaVersion = '20.0'
    redissonVersion = "3.16.1"
}
ext['lombok.version'] = '1.18.2'
ext['log4j2.version'] = '2.15.0'


allprojects {

    group = "com.thzy.socialLogin"

    repositories {
        mavenCentral()
    }
}

//添加统一依赖版本管理
subprojects {
    apply plugin: 'io.spring.dependency-management'
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
        }
        dependencies {
            dependency "commons-io:commons-io:$commonsIoVersion"
            dependency "javax.mail:mail:${javaMailVersion}"
            dependency "commons-fileupload:commons-fileupload:$fileuploadVersion"
            dependency "com.google.guava:guava:$guavaVersion"
            dependencySet(group: 'io.springfox', version: springFoxVersion) {
                entry 'springfox-swagger2'
                entry 'springfox-swagger-ui'
                entry 'springfox-bean-validators'
            }
            dependencySet(group: 'org.powermock', version: powermockVersion) {
                entry 'powermock-module-junit4'
                entry 'powermock-module-junit4-rule'
                entry 'powermock-api-mockito2'
                entry 'powermock-core'
            }
            dependencySet(group: 'org.redisson', version: redissonVersion) {
                entry 'redisson'
            }
        }
    }
}

//add subproject common dependency
subprojects {

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'

    bootJar {
        enabled false
    }

    jar {
        enabled = true
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        implementation("org.apache.tomcat:tomcat-ssi:9.0.30")
        // https://mvnrepository.com/artifact/net.sf.ehcache/ehcache
        implementation group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.9.2', ext: 'pom'
        implementation 'io.springfox:springfox-swagger2'
        implementation 'io.springfox:springfox-swagger-ui'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.vintage:junit-vintage-engine:5.7.2'
        testImplementation 'org.testng:testng:7.4.0'
        testImplementation 'org.powermock:powermock-module-junit4'
        testImplementation 'org.powermock:powermock-api-mockito2'
        testImplementation 'org.powermock:powermock-core'
        testImplementation 'org.powermock:powermock-module-testng:2.0.9'
        testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
        testImplementation("org.xmlunit:xmlunit-matchers:2.3.0")
        compileOnly("com.google.code.findbugs:jsr305:3.0.2")
        testCompileOnly("com.google.code.findbugs:jsr305:3.0.2")
        implementation group: 'com.googlecode.aviator', name: 'aviator', version: '4.2.0'
        // https://mvnrepository.com/artifact/org.openjdk.jmh/jmh-core
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
        implementation group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.21'
        implementation group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.21'
        // feign
        api 'com.qpp:qpp-feign'
        api 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
        api 'org.springframework.cloud:spring-cloud-starter-openfeign'
        //retry
        // https://mvnrepository.com/artifact/org.springframework.retry/spring-retry
        implementation group: 'org.springframework.retry', name: 'spring-retry', version: '1.3.1'
        api "io.github.openfeign.form:feign-form"
        api "io.github.openfeign.form:feign-form-spring"
        api('org.springframework.boot:spring-boot-starter-data-mongodb')
        api('org.springframework.boot:spring-boot-starter-data-redis')
        api('org.springframework.boot:spring-boot-starter-json')
        api "org.redisson:redisson"
        api 'org.springframework:spring-web'
        api 'org.springframework:spring-webmvc'
        // jackson
        api 'com.fasterxml.jackson.core:jackson-databind'
        api 'com.fasterxml.jackson.core:jackson-annotations'
        api 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
        api 'com.fasterxml.jackson.core:jackson-core'
        api group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.13'
        api 'javax.servlet:javax.servlet-api'
        // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
        api group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
    }
}

//add subproject jacoco
subprojects {
    apply plugin: 'jacoco'

    check.dependsOn jacocoTestReport

    jacocoTestReport {
        reports {
            xml.enabled false
            html.enabled true
        }
    }
}

configurations.all {
    exclude group: 'commons-logging', module: 'commons-logging'
    exclude module: 'spring-boot-starter-logging'
}

